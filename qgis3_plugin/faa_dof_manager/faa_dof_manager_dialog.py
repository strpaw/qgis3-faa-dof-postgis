# -*- coding: utf-8 -*-
"""
/***************************************************************************
 faa_dof_managerDialog
                                 A QGIS plugin
 Manages data from DOF (Digital Obstacle File) provided by FAA (Federal Aviation Administration)
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-10-13
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Pawe≈Ç Strzelewicz
        email                : @
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from .db_values_map import DBValuesMapping


# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'faa_dof_manager_dialog_base.ui'))


class FAADOFManagerDialog(QtWidgets.QDialog, FORM_CLASS):
    """Plugin dialog window dialog implementation."""

    def __init__(self, parent=None):
        """Constructor."""
        super().__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

    def set_single_mode_drop_down_lists(self, db_mapping: DBValuesMapping) -> None:
        """Fill in drop down list control UI elements with 'human' friendly database value that are used
        to determine primary/foreign keys to update/insert obstacle data

        :param db_mapping: instance of DBValuesMapping class with database values mapping fetched from database
        """
        self.comboBoxCountryState.addItems(db_mapping.oas)
        self.comboBoxHorAcc.addItems(db_mapping.hor_acc)
        self.comboBoxVertAcc.addItems(db_mapping.vert_acc)
        self.comboBoxObstacleType.addItems(db_mapping.obstacle_type.keys())
        self.comboBoxMarking.addItems(db_mapping.marking)
        self.comboBoxLighting.addItems(db_mapping.lighting.keys())
        self.comboBoxVerificationStatus.addItems(db_mapping.verification_status)
